plugins {
    id "com.jfrog.bintray" version "1.0"
}
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

dependencies {
    compile('com.squareup.okhttp:okhttp:2.3.0') {
        exclude group: 'com.squareup.okio', module: 'okio'
    }
    compile 'com.squareup.okio:okio:1.3.0'
    compile 'com.mcxiaoke.volley:library:1.0.15'
}

version = project.VERSION_NAME
group = project.GROUP

android {
    compileSdkVersion Integer.parseInt(project.COMPILE_SDK_VERSION)
    buildToolsVersion project.BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(project.MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK_VERSION)
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)
    }

    lintOptions {
        // if true, stop the gradle build if errors are found
        abortOnError true
        // turn off checking the given issue id's
        disable 'TypographyFractions', 'TypographyQuotes', 'InvalidPackage'
        // if true, don't include source code lines in the error output
        noLines true
        // if true, generate an XML report for use by for example Jenkins
        xmlReport true
        // if true, generate an HTML report (with issue explanations, sourcecode, etc)
        htmlReport true
    }
}

install {
    repositories.mavenInstaller{
        pom {
            project {
                packaging POM_PACKAGING
                name POM_DESCRIPTION
                url POM_URL

                licenses {
                    license {
                        name POM_LICENCE_NAME
                        url POM_LICENCE_URL
                        distribution POM_LICENCE_DIST
                    }
                }

                developers {
                    developer {
                        id POM_DEVELOPER_ID
                        name POM_DEVELOPER_NAME
                    }
                }

                scm {
                  url POM_SCM_URL
                    connection POM_SCM_CONNECTION
                    developerConnection POM_SCM_DEV_CONNECTION
                }

            }
        }
    }
}

android.libraryVariants.all { variant ->
        def javadocTask = task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
            description "Generates Javadoc for $variant.name."
            source = variant.javaCompile.source
            ext.androidJar = project.files(android.getBootClasspath().join(File.pathSeparator))
            classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
        }

        javadocTask.dependsOn variant.javaCompile

        def jarJavadocTask = task("jar${variant.name.capitalize()}Javadoc", type: Jar) {
            description "Generate Javadoc Jar for $variant.name"
            classifier = 'javadoc'
            from javadocTask.destinationDir
        }

        jarJavadocTask.dependsOn javadocTask
        artifacts.add('archives', jarJavadocTask)

        def jarSourceTask = task("jar${variant.name.capitalize()}Sources", type: Jar) {
            description "Generates Java Sources for $variant.name."
            classifier = 'sources'
            from variant.javaCompile.source
        }

        jarSourceTask.dependsOn variant.javaCompile
        artifacts.add('archives', jarSourceTask)
    }

bintray {
    user = project.getProperty("bintray.user")
    key = project.getProperty("bintray.key")

    configurations = ['archives']

    pkg {
        repo = "maven"
        name = "material_range_bar"
        websiteUrl = POM_URL
        vcsUrl = POM_URL
        licenses = ["Apache-2.0"]
        publish = true
        version {
            gpg {
                sign = true
                passphrase = project.getProperty("bintray.gpg.password")
            }
            mavenCentralSync {
                sync = true
                user = project.getProperty("bintray.oss.user")
                password = project.getProperty("bintray.oss.password")
                close = '1'
            }

        }
    }
}



